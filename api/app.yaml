openapi: 3.0.2
info:
  title: Neutralino.app
  version: 1.5.0
  description: '`Neutralino.app` namespace contains methods related to the current application instance.'

x-ref: |
  https://github.com/neutralinojs/neutralinojs.github.io/blob/main/docs/api/app.md
  https://github.com/neutralinojs/neutralinojs/blob/main/api/app/app.cpp
  https://github.com/neutralinojs/neutralino.js/blob/main/src/api/app.ts
  
paths:

  /__nativeMethod_app.exit:
    post:
      operationId: Neutralino.app.exit
      summary: exit
      description: |-
        Terminates the running application.
        <!--
        type: tab
        title: JS
        -->
        ```js
        await Neutralino.app.exit();

        await Neutralino.app.exit(130);
        ```
        <!--
        type: tab
        title: Test
        -->
        ```json
        ```
        <button onClick="alert('---')">Tokyo</button>
        <script>
        var e = ""
        </script>
        <!-- type: tab-end -->
      tags:
        - App
      requestBody:
        $ref: '#/components/requestBodies/ExitRequest'
      responses:
        '200':
          $ref: '#/components/responses/AlwaysSuccessResponse'

  /__nativeMethod_app.getConfig:
    get:
      operationId: Neutralino.app.getConfig
      summary: getConfig
      description: |
        Returns the current application configuration as a JSON object.
        <!--
        type: tab
        title: JS
        -->
        ```js
        await Neutralino.app.getConfig();
        ```
        <!-- type: tab-end -->
      tags:
        - App
      responses:
        '200':
          $ref: '#/components/responses/GetConfigResponse'
      x-note: 'maxWidth, maxHeight, binaryVersion and clientVersion not found in default neutralino.config.json'

  /__nativeMethod_app.keepAlive:
    get:
      operationId: Neutralino.app.keepAlive
      summary: keepAlive
      description: |-
        The keepAlive method is responsible for saving the Neutralinojs server instance from the automatic termination.
        This method is called automatically from the client library for the browser mode.
        <!--
        type: tab
        title: JS
        -->
        ```js
        await Neutralino.app.keepAlive();
        ```
        <!-- type: tab-end -->
      tags:
        - App
      responses:
        '200':
          $ref: '#/components/responses/KeepAliveResponse'
          
  /__nativeMethod_app.killProcess:
    get:
      operationId: Neutralino.app.killProcess
      summary: killProcess
      description: |
        Kills the application process.
        If the application becomes unresponsive, you can use this to terminate the process instantly.
        However, we recommend you to use the `exit()` method to close your application properly.
        <!--
        type: tab
        title: JS
        -->
        ```js
        await Neutralino.app.killProcess();
        ```
        <!-- type: tab-end -->
      tags:
        - App
      responses:
        '200':
          $ref: '#/components/responses/AlwaysSuccessResponse'

components:

  securitySchemes:
    basicAuth:
      type: apiKey
      in: header
      name: Authorization 

  requestBodies:
    
    ExitRequest:
      content:
        application/json:
          schema:
            title: ExitQuery
            type: object
            properties:
              exitCode:
                type: integer
                description: An integer value for the process's exit code. The default value is always `0` (success).

  responses:

    AlwaysSuccessResponse:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                default: true
                description: Always true
            required:
              - success

    GetConfigResponse:
      description: Application configuration
      content:
        application/json:
          schema:
            $ref: ./models/neutralino.config.schema.yaml
            
    KeepAliveResponse:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
