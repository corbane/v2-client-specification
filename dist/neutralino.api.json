{
  "openapi": "3.0.2",
  "info": {
    "title": "Neutralino API",
    "version": "1.5.0"
  },
  "servers": [
    {
      "url": "http://localhost:{NL_PORT}",
      "description": "Neutralino server",
      "variables": {
        "NL_PORT": {
          "description": "Application port",
          "default": "65097"
        }
      }
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/__nativeMethod_app.exit": {
      "post": {
        "summary": "exit",
        "operationId": "Neutralino.app.exit",
        "tags": [
          "App"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ExitQuery",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "An integer value for the process's exit code. The default value is always `0` (success)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        },
        "description": "Terminates the running application.\n\n```js\nawait Neutralino.app.exit();\n```\n\n```js\nawait Neutralino.app.exit(130);\n```"
      }
    },
    "/__nativeMethod_app.getConfig": {
      "get": {
        "summary": "getConfig",
        "operationId": "Neutralino.app.getConfig",
        "tags": [
          "App"
        ],
        "responses": {
          "200": {
            "description": "Application configuration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applicationId": {
                      "type": "string",
                      "description": "Unique string to identify your application. Eg: `js.neutralino.sample`",
                      "default": "js.neutralino.sample"
                    },
                    "defaultMode": {
                      "type": "string",
                      "description": "Mode of the application. Accepted values are `window`, `browser`, and `cloud`.",
                      "default": "window",
                      "enum": [
                        "window",
                        "browser",
                        "cloud"
                      ]
                    },
                    "port": {
                      "type": "integer",
                      "description": "The port of your application. If the value is `0`, Neutralinojs will use a random available port."
                    },
                    "url": {
                      "type": "string",
                      "description": "The entry URL of the application. Neutralinojs will initially load this URL.\nThis property accepts both relative and absolute URLs.",
                      "default": "/resources/"
                    },
                    "enableHTTPServer": {
                      "type": "boolean",
                      "description": "Enables or disables the background server (The static file server and native API).",
                      "default": true
                    },
                    "enableNativeAPI": {
                      "type": "boolean",
                      "description": "Enables or disables the native API. For better security, this setting should be `false` if you are using a\nremote URL as your web frontend.",
                      "default": true
                    },
                    "nativeBlockList": {
                      "type": "array",
                      "description": "An array of native methods needs to be blocked from the frontend of the application.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "globalVariables": {
                      "type": "object",
                      "description": "A key-value-based JavaScript object of custom [global variables](../developer-environment/global-variables#custom-global-variables)."
                    },
                    "modes": {
                      "type": "object",
                      "required": [
                        "window",
                        "browser",
                        "cloud"
                      ],
                      "properties": {
                        "window": {
                          "type": "object",
                          "required": [
                            "title"
                          ],
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "Title of the native window.",
                              "default": "Neutralinojs app"
                            },
                            "width": {
                              "type": "integer",
                              "description": "Width of the native window.",
                              "default": 800
                            },
                            "height": {
                              "type": "integer",
                              "description": "Height of the native window.",
                              "default": 500
                            },
                            "maxWidth": {
                              "type": "number",
                              "description": "Maximum width of the native window."
                            },
                            "maxHeight": {
                              "type": "number",
                              "description": "Maximum height of the native window."
                            },
                            "minWidth": {
                              "type": "integer",
                              "description": "Minimum width of the native window.",
                              "default": 400
                            },
                            "minHeight": {
                              "type": "integer",
                              "description": "Minimum height of the native window.",
                              "default": 200
                            },
                            "fullScreen": {
                              "type": "boolean",
                              "description": "Activates the full-screen mode.",
                              "default": false
                            },
                            "alwaysOnTop": {
                              "type": "boolean",
                              "description": "Activates the top-most mode.",
                              "default": false
                            },
                            "icon": {
                              "type": "string",
                              "description": "Application icon's file name. You can directly point to an image file in the\nresources directory. We recommend you to choose a transparent PNG file.",
                              "default": "/resources/icons/appIcon.png"
                            },
                            "enableInspector": {
                              "type": "boolean",
                              "description": "Automatically opens the developer tools window.",
                              "default": true
                            },
                            "borderless": {
                              "type": "boolean",
                              "description": "Activates the borderless mode.",
                              "default": false
                            },
                            "maximize": {
                              "type": "boolean",
                              "description": "Launches the application maximized.",
                              "default": false
                            },
                            "hidden": {
                              "type": "boolean",
                              "description": "Make the window invisible. This setting can be used to develop background services.",
                              "default": false
                            },
                            "resizable": {
                              "type": "boolean",
                              "description": "Make the window resizable or not. The default value is `true`.",
                              "default": true
                            }
                          }
                        },
                        "browser": {
                          "type": "object"
                        },
                        "cloud": {
                          "type": "object"
                        }
                      }
                    },
                    "cli": {
                      "type": "object",
                      "required": [
                        "binaryName",
                        "resourcesPath",
                        "clientLibrary"
                      ],
                      "properties": {
                        "binaryName": {
                          "type": "string",
                          "description": "Binary file name of your application. If it is `myapp`, all binaries should use\n`myapp-<platform>` format.",
                          "default": "neutralino"
                        },
                        "resourcesPath": {
                          "type": "string",
                          "description": "Path of your application resources.",
                          "default": "/resources/"
                        },
                        "clientLibrary": {
                          "type": "string",
                          "description": "Filename of the Neutralinojs JavaScript library.",
                          "default": "/resources/js/neutralino.js"
                        },
                        "binaryVersion": {
                          "type": "string",
                          "description": "Neutralinojs server version. neu CLI adds this property when the project is scaffolded."
                        },
                        "clientVersion": {
                          "type": "string",
                          "description": "Neutralinojs client version. neu CLI adds this property when the project is scaffolded."
                        }
                      }
                    }
                  },
                  "required": [
                    "applicationId",
                    "defaultMode",
                    "port",
                    "url",
                    "enableHTTPServer",
                    "enableNativeAPI",
                    "nativeBlockList",
                    "globalVariables",
                    "modes",
                    "cli"
                  ]
                }
              }
            }
          }
        },
        "description": "Returns the current application configuration as a JSON object.\n\n```js\nNeutralino.app.getConfig ()\n```"
      }
    },
    "/__nativeMethod_app.keepAlive": {
      "get": {
        "summary": "keepAlive",
        "operationId": "Neutralino.app.keepAlive",
        "tags": [
          "App"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "The keepAlive method is responsible for saving the Neutralinojs server instance from the automatic termination.\nThis method is called automatically from the client library for the browser mode.\n\n```js\nNeutralino.app.keepAlive();\n```"
      }
    },
    "/__nativeMethod_app.killProcess": {
      "get": {
        "summary": "killProcess",
        "operationId": "Neutralino.app.killProcess",
        "tags": [
          "App"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        },
        "description": "Kills the application process.\nIf the application becomes unresponsive, you can use this to terminate the process instantly.\nHowever, we recommend you to use the `exit()` method to close your application properly.\n\n```js\nawait Neutralino.app.killProcess();\n```"
      }
    },
    "/__nativeMethod_computer.getMemoryInfo": {
      "get": {
        "summary": "computer.getMemoryInfo",
        "operationId": "Neutralino.computer.getMemoryInfo",
        "tags": [
          "Computer"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string"
                    },
                    "returnValue": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total physical memory."
                        },
                        "available": {
                          "type": "number",
                          "description": "Available physical memory."
                        }
                      },
                      "required": [
                        "total",
                        "available"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "returnValue"
                  ]
                }
              }
            }
          }
        },
        "description": "Provides physical memory details (in megabytes).\n\n```js\nNeutralino.computer.getMemoryInfo()\n  .then (ramInfo => `Your ram size: ${Math.round(ramInfo.total / 1000000)}GB`)\n```"
      }
    },
    "/__nativeMethod_debug.log": {
      "post": {
        "summary": "log",
        "operationId": "Neutralino.debug.log",
        "tags": [
          "Debug"
        ],
        "description": "Writes messages to `neutralino.log` file. \n\n:::tip\nIf your application is running via `neu run` or `neu listen`, you can see log\nmessages on your terminal.\n:::\n\n```js\nNeutralino.debug.log({\n  type: 'INFO',\n  message: 'Test message'\n});\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "INFO",
                      "WARNING",
                      "ERROR"
                    ],
                    "description": "Type of the message. Accepted values are `INFO`, `WARN`, and `ERROR`."
                  },
                  "message": {
                    "type": "string",
                    "description": "Content to be logged."
                  }
                },
                "required": [
                  "type",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.createDirectory": {
      "post": {
        "summary": "createDirectory",
        "operationId": "Neutralino.filesystem.createDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "New directory path."
                  }
                },
                "title": "",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "title": "success",
                      "required": [
                        "success",
                        "message"
                      ]
                    },
                    {
                      "properties": {
                        "error": {
                          "type": "string"
                        }
                      },
                      "title": "error",
                      "required": [
                        "error"
                      ]
                    }
                  ]
                },
                "examples": {
                  "example-success": {
                    "value": {
                      "success": true,
                      "message": "Directory ./newDirectory was created"
                    }
                  },
                  "example-error": {
                    "value": {
                      "error": "Cannot create a directory in ./newDirectory"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new directory.\n\n```js\nNeutralino.filesystem.createDirectory ({\n  path: './newDirectory',\n});\n```",
        "tags": [
          "Filesystem"
        ]
      }
    },
    "/__nativeMethod_filesystem.removeDirectory": {
      "post": {
        "summary": "removeDirectory",
        "operationId": "Neutralino.filesystem.removeDirectory",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Removes given directories.\n\n```js\nawait Neutralino.filesystem.removeDirectory({\n  path: './tmpDirectory',\n});\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "RemoveDirectoryOptions",
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Directory path."
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.writeFile": {
      "post": {
        "summary": "writeFile",
        "operationId": "Neutralino.filesystem.writeFile",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Writes new text files with data.\n\n```js\nawait Neutralino.filesystem.writeFile({\n  fileName: './myFile.txt',\n  data: 'Sample content'\n});\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "WriteFileOptions",
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "File name."
                  },
                  "data": {
                    "type": "string",
                    "description": "Content of the file in string format."
                  }
                },
                "required": [
                  "path",
                  "data"
                ]
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.writeBinaryFile": {
      "post": {
        "summary": "writeBinaryFile",
        "operationId": "Neutralino.filesystem.writeBinaryFile",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Writes new binary files with data.\n\n```js\nlet rawBin = new ArrayBuffer(1);\nlet view = new Uint8Array(rawBin);\nview[0] = 64; // Saves ASCII '@' to the binary file\nawait Neutralino.filesystem.writeBinaryFile({\n  fileName: './myFile.bin',\n  data: rawBin\n});\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "WriteBinaryFileOptions",
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "File name."
                  },
                  "data": {
                    "type": "string",
                    "description": "Content of the binary file as an (`ArrayBuffer`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.readFile": {
      "post": {
        "summary": "readFile",
        "operationId": "Neutralino.filesystem.readFile",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Reads text files.\n\n```js\nlet response = await Neutralino.filesystem.readFile({\n  fileName: './myFile.txt'\n});\nconsole.log(`Content: ${response.data}`);\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ReadFileOptions",
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "File name."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.readBinaryFile": {
      "post": {
        "summary": "readBinaryFile",
        "operationId": "Neutralino.filesystem.readBinaryFile",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Reads binary files.\n\n```js\nlet response = await Neutralino.filesystem.readBinaryFile({\n  fileName: './myFile.bin'\n});\nlet view = new Uint8Array(response.data);\nconsole.log('Binary content: ', view);\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ReadBinaryFileOptions",
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "File name."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.removeFile": {
      "post": {
        "summary": "removeFile",
        "operationId": "Neutralino.filesystem.removeFile",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Removes given file.\n\n```js\nawait Neutralino.filesystem.removeFile({\n  fileName: './myFile.txt'\n});\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "RemoveFileOptions",
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "File name."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.readDirectory": {
      "post": {
        "summary": "readDirectory",
        "operationId": "Neutralino.filesystem.readDirectory",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Reads a whole directory.\n\n```js\nlet response = await Neutralino.filesystem.readDirectory({\n  path: NL_PATH\n});\nconsole.log('Content: ', response.entries);\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ReadDirectoryOptions",
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Directory path"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.copyFile": {
      "post": {
        "summary": "copyFile",
        "operationId": "Neutralino.filesystem.copyFile",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Copies a file to a new destination.\n\n```js\nawait Neutralino.filesystem.copyFile({\n  source: './source.txt',\n  destination: './destination.txt'\n});\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "CopyFileOptions",
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "Source file as a string."
                  },
                  "destination": {
                    "type": "string",
                    "description": "Destionation file as a string."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.moveFile": {
      "post": {
        "summary": "moveFile",
        "operationId": "Neutralino.filesystem.moveFile",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Moves a file to a new destination.\n\n```js\nawait Neutralino.filesystem.moveFile({\n  source: './source.txt',\n  destination: './destination.txt'\n});\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "MoveFileOptions",
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "Source file as a string."
                  },
                  "destination": {
                    "type": "string",
                    "description": "Destionation file as a string."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_filesystem.getStats": {
      "post": {
        "summary": "getStats",
        "operationId": "Neutralino.filesystem.getStats",
        "tags": [
          "Filesystem"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Returns file statistics for the given path. If the given path doesn't exist or is unable to access, \nthe awaited method will throw an error. Therefore, you can use this method to check the existance of a file or directory.\n\n```js\nlet response = await Neutralino.filesystem.getStats({\n  path: './sampleVideo.mp4'\n});\nconsole.log('Stats:', response);\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "GetStatsOptions",
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "File or directory path."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_os.execCommand": {
      "post": {
        "operationId": "Neutralino.os.execCommand",
        "summary": "execCommand",
        "tags": [
          "OS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "The command needs to be executed."
                  },
                  "shouldRunInBackground": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "command"
                ],
                "example": {
                  "command": "python --version"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "output": {
                      "type": "string",
                      "description": "String data taken from the both standard output (STDOUT) and standard error (STDERR) streams of the command's process."
                    }
                  },
                  "required": [
                    "success",
                    "output"
                  ]
                }
              }
            }
          }
        },
        "description": "Executes a command and returns the output.\n\n```js\nNeutralino.os.execCommand ('python --version')\n```"
      }
    },
    "/__nativeMethod_os.getEnv": {
      "post": {
        "summary": "getEnv",
        "operationId": "Neutralino.os.getEnv",
        "tags": [
          "OS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the environment variable."
                  }
                },
                "required": [
                  "key"
                ],
                "example": {
                  "key": "USER"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "returnValue": {
                      "type": "string",
                      "description": "Value of the given environment variable."
                    }
                  },
                  "required": [
                    "success",
                    "returnValue"
                  ]
                }
              }
            }
          }
        },
        "description": "Provides the value of a given environment variable.\n\n```js\nNeutralino.os.getEnv('USER')\n  .then (response => `USER = ${response.value}`);\n```"
      },
      "parameters": []
    },
    "/__nativeMethod_os.showOpenDialog": {
      "post": {
        "summary": "showOpenDialog",
        "operationId": "Neutralino.os.showOpenDialog",
        "tags": [
          "OS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the dialog."
                  },
                  "isDirectoryMode": {
                    "type": "boolean",
                    "description": "A boolean value to allow directories to be selected. The default value is `false`."
                  },
                  "filter": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of file extensions to filter the file list.  Eg: `filter: ['js', 'ts', '*']`."
                  }
                },
                "required": [
                  "title"
                ],
                "example": {
                  "title": "Select a folder",
                  "isDirectoryMode": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "returnValue": {
                      "type": "string",
                      "description": "The selected value (a folder or directory)."
                    }
                  },
                  "required": [
                    "success",
                    "returnValue"
                  ]
                }
              }
            }
          }
        },
        "description": "Shows the file open dialog.\n\n```js\nlet response = await Neutralino.os.showDialogOpen({\n  title: 'Select a folder',\n  isDirectoryMode: true\n});\nconsole.log(`You've selected: ${response.selectedEntry}`);\n```"
      }
    },
    "/__nativeMethod_os.showSaveDialog": {
      "post": {
        "summary": "showSaveDialog",
        "operationId": "Neutralino.os.showSaveDialog",
        "tags": [
          "OS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the dialog."
                  }
                },
                "required": [
                  "title"
                ],
                "example": {
                  "title": "Save to a file"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "returnValue": {
                      "type": "string",
                      "description": "The selected value (a folder or directory)."
                    }
                  },
                  "required": [
                    "success",
                    "returnValue"
                  ]
                }
              }
            }
          }
        },
        "description": "Shows the file save dialog.\n\n```js\nlet response = await Neutralino.os.showSaveDialog({\n  title: 'Save to a file'\n});\nconsole.log(`You've selected: ${response.selectedEntry}`);\n```"
      }
    },
    "/__nativeMethod_os.showNotification": {
      "post": {
        "summary": "showNotification",
        "operationId": "Neutralino.os.showNotification",
        "tags": [
          "OS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the dialog."
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the notification."
                  }
                },
                "required": [
                  "title",
                  "content"
                ],
                "example": {
                  "type": "Hello world",
                  "content": "It works!. Have a nice day"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        },
        "description": "Displays a notification message.\n```js\nawait Neutralino.os.showNotification({\n  summary: 'Hello world',\n  body: 'It works!. Have a nice day'\n});\n```"
      }
    },
    "/__nativeMethod_os.showMessageBox": {
      "post": {
        "summary": "showMessageBox",
        "operationId": "Neutralino.os.showMessageBox",
        "tags": [
          "OS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the message box.",
                    "example": "Save to a file"
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the message box."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "WARN",
                      "ERROR",
                      "INFO",
                      "QUESTION"
                    ],
                    "description": "Message box type. Accepted values are `WARN`, `ERROR`, `INFO`, and `QUESTION`.",
                    "example": "INFO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        },
        "description": "Displays a message box."
      }
    },
    "/__nativeMethod_os.setTray": {
      "post": {
        "summary": "setTray",
        "operationId": "Neutralino.os.setTray",
        "tags": [
          "OS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "icon": {
                    "type": "string"
                  },
                  "menu": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "Label of the menu item. This field is a mandatory field. Use `-` (hyphen) character for a menu separator."
                        },
                        "id": {
                          "type": "string",
                          "description": "A unique identifier for each menu item."
                        },
                        "isDisabled": {
                          "type": "boolean",
                          "description": "A boolean flag to disable/enable a specific menu item."
                        },
                        "isChecked": {
                          "type": "boolean",
                          "description": "A boolean flag to mark a specific menu item as selected."
                        }
                      },
                      "required": [
                        "text"
                      ]
                    }
                  }
                },
                "x-examples": {
                  "example": {
                    "icon": "/test/icons/appIcon.png",
                    "menuItems": [
                      {
                        "id": "about",
                        "text": "About"
                      },
                      {
                        "text": "-"
                      },
                      {
                        "id": "quit",
                        "text": "Quit"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        },
        "description": "Creates/updates the tray icon and menu.\n```js\nlet tray = {\n  icon: '/resources/icons/trayIcon.png',\n  menuItems: [\n    {id: \"about\", text: \"About\"},\n    {text: \"-\"},\n    {id: \"quit\", text: \"Quit\"}\n  ]\n};\nawait Neutralino.os.setTray(tray);\n```"
      }
    },
    "/__nativeMethod_os.open": {
      "post": {
        "operationId": "open",
        "summary": "Neutralino.os.open",
        "tags": [
          "OS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL to be opened (required)."
                  }
                },
                "required": [
                  "url"
                ],
                "x-examples": {
                  "example": {
                    "url": "https://neutralino.js.org"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        },
        "description": "Opens a URL with the default web browser.\n:::tip If your application is running on the default web browser, this method will open a new tab. :::"
      }
    },
    "/__nativeMethod_storage.setData": {
      "post": {
        "summary": "setData",
        "operationId": "Neutralino.storage.setData",
        "tags": [
          "Storage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "A key to indentify data."
                  },
                  "data": {
                    "type": "string",
                    "description": "Data as a string. If this value is `null` or `undefined`,\nthe specific data record will be erased from the disk."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "properties": {
                        "success": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "success"
                      ]
                    },
                    {
                      "properties": {
                        "error": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Writes data into Neutralinojs shared storage. \n\n```js\nawait Neutralino.storage.putData({\n  bucket: 'userDetails',\n  data: JSON.stringify({\n    username: 'TestValue'\n  })\n});\n```"
      }
    },
    "/__nativeMethod_storage.getData": {
      "post": {
        "summary": "getData",
        "operationId": "Neutralino.storage.getData",
        "tags": [
          "Storage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The key of the storage data record."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "returnValue": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "string",
                              "description": "Data string of the storage record."
                            }
                          }
                        }
                      },
                      "required": [
                        "success",
                        "returnValue"
                      ]
                    },
                    {
                      "properties": {
                        "error": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Reads and returns data for a given Neutralinojs shared storage key. \n```js\nlet response = await Neutralino.storage.getData({\n  bucket: 'userDetails'\n});\nconsole.log(`Data: ${response.data}`);\n```\n"
      }
    },
    "/__nativeMethod_window.setTitle": {
      "post": {
        "summary": "setTitle",
        "operationId": "Neutrlino.window.setTitle",
        "description": "Sets the title of the native window.\n\n```js\nNeutralino.window.setTitle ('My window')\n```",
        "tags": [
          "Window"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SetTitleQuery",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the window as a string."
                  }
                },
                "required": [
                  "title"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "title": "New title"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "label": "JS",
            "source": "Neutralino.window.setTitle('New title')"
          }
        ]
      }
    },
    "/__nativeMethod_window.setSize": {
      "post": {
        "summary": "setSize",
        "operationId": "neutralino_window_post_size",
        "description": "Resize the native window. \\\nThis feature is suitable to make custom window bars along with the [borderless mode](https://neutralino.js.org/docs/configuration/neutralino.config.json#modeswindowborderless-boolean).\n\nThis method always expects width and height couples. \\\nFor example, if you are sending `minWidth`, you should send `minHeight` too.\n```js\nNeutralino.window.setSize({\n    width: 500,\n    height: 200,\n    maxWidth: 600,\n    maxHeight: 400\n});\n```\n\n```js\nNeutralino.window.setSize({\n    resizable: false\n});\n```\n",
        "tags": [
          "Window"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SetSizeQuery",
                "type": "object",
                "properties": {
                  "width": {
                    "type": "number",
                    "description": "Window width in pixels."
                  },
                  "height": {
                    "type": "number",
                    "description": "Window height in pixels."
                  },
                  "minWidth": {
                    "type": "number",
                    "description": "Minimum width of the window in pixels."
                  },
                  "minHeight": {
                    "type": "number",
                    "description": "Minimum height of the window in pixels."
                  },
                  "maxWidth": {
                    "type": "number",
                    "description": "Maximum width of the window in pixels."
                  },
                  "maxHeight": {
                    "type": "number",
                    "description": "Maximum height of the window in pixels."
                  },
                  "resizable": {
                    "type": "boolean",
                    "description": "A boolean value to make the window resizable or fixed."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.setIcon": {
      "post": {
        "summary": "setIcon",
        "operationId": "Neutralino.window.setIcon",
        "description": "Sets an icon for the native window or Dock.",
        "tags": [
          "Window"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SetIconQuery",
                "type": "object",
                "properties": {
                  "icon": {
                    "type": "string",
                    "description": "Path of the icon. A `200x200` PNG image file works fine on all supported operating systems."
                  }
                },
                "required": [
                  "icon"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        },
        "x-doc": "const icon = '/resources/icons/appIcon.png'; await Neutralino.window.setIcon(icon);"
      }
    },
    "/__nativeMethod_window.focus": {
      "get": {
        "summary": "focus",
        "operationId": "Neutralino.window.focus",
        "description": "Focuses the native window.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.hide": {
      "get": {
        "summary": "hide",
        "operationId": "Neutralino.window.hide",
        "description": "Hides the native window.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.isVisible": {
      "get": {
        "summary": "isVisible",
        "operationId": "Neutralino.window.isVisible",
        "description": "Returns true if the native window is visible.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "IsVisibleReturnValue",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.show": {
      "get": {
        "summary": "show",
        "operationId": "Neutralino.window.show",
        "description": "Shows the native window.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.minimize": {
      "get": {
        "summary": "minimize",
        "operationId": "Neutralino.window.minimize",
        "description": "Minimizes the native window.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.maximize": {
      "get": {
        "summary": "maximize",
        "operationId": "Neutralino.window.maximize",
        "description": "Maximizes the native window.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.isMaximized": {
      "get": {
        "summary": "isMaximized",
        "operationId": "Neutralino.window.isMaximized",
        "description": "Returns true if the native window is maximized.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.unmaximize": {
      "get": {
        "summary": "unmaximize",
        "operationId": "Neutralino.window.unmaximize",
        "description": "Restores the native window.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.setFullScreen": {
      "get": {
        "summary": "setFullScreen",
        "operationId": "Neutralino.window.setFullScreen",
        "description": "Enables the full screen mode.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.isFullScreen": {
      "get": {
        "summary": "isFullScreen",
        "operationId": "Neutralino.window.isFullScreen",
        "description": "Returns true if the native window is in the full screen mode.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "returnValue": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.exitFullScreen": {
      "get": {
        "summary": "exitFullScreen",
        "operationId": "Neutralino.window.exitFullScreen",
        "description": "Exits from the full screen mode.",
        "tags": [
          "Window"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/__nativeMethod_window.move": {
      "post": {
        "summary": "move",
        "operationId": "Neutralino.window.move",
        "description": "Moves the native window into given coordinates. \\\nNeutralinojs's cross-platform coordinate system starts from top-left corner of the screen.\nIn other words, `x=0,y=0` point refers to the top-left corner of the device's main screen.\n",
        "tags": [
          "Window"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number",
                    "description": "A integer value for the horizontal position."
                  },
                  "y": {
                    "type": "number",
                    "description": "A integer value for the vertical position."
                  }
                },
                "required": [
                  "x",
                  "y"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true,
                      "description": "Always true"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "requestBodies": {},
    "responses": {},
    "schemas": {}
  }
}